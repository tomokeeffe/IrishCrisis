nasa_10_f_bs$time <-  as.Date(nasa_10_f_bs$time, format("%Y"))
nasa_10_f_bs$time <- year(nasa_10_f_bs$time)
Regions <- c("EU28", "DE", "EL", "IE", "UK", "ES", "FR", "IT", "NL", "PT")
Region <- c("DE","EL", "IE", "FR", "UK","ES","IT")
Liabdata <- filter(nasa_10_f_bs, finpos == "LIAB", sector == "S12", co_nco == "CO", unit == "PC_GDP", na_item == "F",geo.time %in% Region)
Transdata <- filter(nasa_10_f_tr, finpos == "ASS", sector == "S12", co_nco == "CO", unit == "PC_GDP", na_item == "F_TR",geo.time %in% Region)
Liabdata
getwd()
save(Liabdata, file = "Liabdata.Rdata")
save(Transdata, file = "Transdata.Rdata")
library(shinydashboard)
library(ggplot2)
#library(httr)
library(rsconnect)
library(shiny)
library(plotly)
library(reshape2)
library(SmarterPoland)
library(dplyr)
library(zoo)
library(viridis)
library(lubridate)
library(streamgraph)
#library(htmlwidgets)
load(url("https://dl.dropboxusercontent.com/u/78100269/nasa_10_f_tr.RData"))
load(url("https://dl.dropboxusercontent.com/u/78100269/nasa_10_f_bs.RData"))
nasa_10_f_tr$time <-  as.Date(nasa_10_f_tr$time, format("%Y"))
nasa_10_f_tr$time <- year(nasa_10_f_tr$time)
nasa_10_f_bs$time <-  as.Date(nasa_10_f_bs$time, format("%Y"))
nasa_10_f_bs$time <- year(nasa_10_f_bs$time)
Regions <- c("EU28", "DE", "EL", "IE", "UK", "ES", "FR", "IT", "NL", "PT")
Region <- c("DE","EL", "IE", "FR", "UK","ES","IT")
Liabdata <- filter(nasa_10_f_bs, finpos == "LIAB", sector == "S12", co_nco == "CO", unit == "PC_GDP", na_item == "F",geo.time %in% Region)
Transdata <- filter(nasa_10_f_tr, finpos == "ASS", sector == "S12", co_nco == "CO", unit == "PC_GDP", na_item == "F_TR",geo.time %in% Region)
save(Liabdata, file = "Liabdata.Rdata")
save(Transdata, file = "Transdata.Rdata")
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
ggplot(CapRatio, aes(x=Year, y=Percentage, fill=Code)) +
geom_area()
ggplotly(CapRatio, aes(x=Year, y=Percentage, fill=Code)) +
geom_area()
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
streamgraph(Transdata, key = "geo.time", value = "value", date = "time")
streamgraph(Transdata, key = "geo.time", value = "value", date = "time")%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
streamgraph(Transdata, key = "geo.time", value = "value", date = "time", offset = "zero")%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
Liabplot <- streamgraph(Liabdata, key = "geo.time", value = "value", date = "time")%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
Liabplot
colours = (col=viridis(8))
Liabplot <- streamgraph(Liabdata, key = "geo.time", value = "value", date = "time")%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
Liabplot
colours = (col=viridis(12))
streamgraph(Liabdata, key = "geo.time", value = "value", date = "time")%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
colours = (col=viridis(8))
streamgraph(Liabdata, key = "geo.time", value = "value", date = "time")%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
streamgraph(Liabdata, key = "geo.time", value = "value", date = "time", offset = "zero")%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
Capplot <- streamgraph(CapRatio, key = "Code", value = "Percentage", date = "Year", offset = "zero")%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
Capplot
Capplot <- streamgraph(CapRatio, key = "Code", value = "Percentage", date = "Year", offset = "expand")%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
Capplot
Capplot <- streamgraph(CapRatio, key = "Code", value = "Percentage", date = "Year", offset = "silhouette")%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
Capplot
Capplot <- streamgraph(CapRatio, key = "Code", value = "Percentage", date = "Year", interpolate="linear" )%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
Capplot
Capplot <- streamgraph(CapRatio, key = "Code", value = "Percentage", date = "Year", interpolate="step" )%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
Capplot
Capplot <- streamgraph(CapRatio, key = "Code", value = "Percentage", date = "Year", offset = "zero" )%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
Capplot
CreditFin <- streamgraph(CreditFromFin, key = "Code", value = "Percentage", date = "Year", offset = "zero")%>%
sg_axis_x(2)%>%
sg_fill_manual(colours) %>%
sg_legend(show=TRUE, label="Country: ")
CreditFin
runApp('Desktop/R/IrishCrisis')
print(source('Desktop/R/Scripts/7Processes/Godley7Shiny.R')$value)
load(url("https://dl.dropboxusercontent.com/u/78100269/nasa_10_f_tr.RData"))
print(source('Desktop/R/Scripts/7Processes/Godley7Shiny.R')$value)
library(shiny); runApp('Desktop/R/Scripts/7Processes/Godley7Shiny.R')
library(shinydashboard)
library(rsconnect)
library(shiny)
library(plotly)
library(reshape2)
library(SmarterPoland)
library(xlsx)
library(devtools)
library(dplyr)
library(zoo)
library(gdata)
library(gridExtra)
library(pdfetch)
library(ecb)
library(lubridate)
library(htmlwidgets)
#load("/Users/tomokeeffe/data-eurostat/long/nasa_10_f_tr.RData")
load(url("https://dl.dropboxusercontent.com/u/78100269/nasa_10_f_tr.RData"))
#load("/Users/tomokeeffe/data-eurostat/long/nasa_10_nf_tr.RData")
load(url("https://dl.dropboxusercontent.com/u/78100269/nasa_10_nf_tr.RData"))
#load("/Users/tomokeeffe/data-eurostat/long/prc_hicp_aind.RData")
load(url("https://dl.dropboxusercontent.com/u/78100269/prc_hicp_aind.RData"))
nasa_10_f_tr$time <-  as.Date(nasa_10_f_tr$time, format("%Y"))
nasa_10_f_tr$time <- year(nasa_10_f_tr$time)
nasa_10_nf_tr$time <-  as.Date(nasa_10_nf_tr$time, format("%Y"))
nasa_10_nf_tr$time <- year(nasa_10_nf_tr$time)
prc_hicp_aind$time <-  as.Date(prc_hicp_aind$time, format("%Y"))
prc_hicp_aind$time <- year(prc_hicp_aind$time)
nasa_10_f_tr <- nasa_10_f_tr[order(as.Date(nasa_10_f_tr$time, format="%Y")),]
nasa_10_nf_tr <- nasa_10_nf_tr[order(as.Date(nasa_10_nf_tr$time, format="%Y")),]
prc_hicp_aind <- prc_hicp_aind[order(as.Date(prc_hicp_aind$time, format="%Y")),]
tmp2<-filter(nasa_10_nf_tr, geo.time=="IE", unit=="CP_MEUR")
tmp21<-filter(prc_hicp_aind, geo.time==GEO, coicop=="CP00",unit=="INX_A_AVG")
tmp21 <- tmp21[-c(1), ]
#gdp
gdp<-filter(tmp2,na_item=="B1GQ", direct=="PAID")
gdp_d <- subset(gdp, select = c("unit", "geo.time","time", "value"))
gdp_d$value <- (gdp$value/lag(gdp$value,1) -1)*100
#general govt balance
gen_gov_balance<-filter(tmp2,na_item=="B9",direct=="PAID", sector=="S13")
gen_gov_balance_pc<-subset(gen_gov_balance, select = c("unit", "geo.time","time", "value"))
gen_gov_balance_pc$value<-as.numeric(as.character(gen_gov_balance_pc$value))
gen_gov_balance_pc$value<-as.numeric(as.character(gen_gov_balance$value))/as.numeric(as.character(gdp$value))
#FINANCIAL BALANCES
#Saving
S <- filter(tmp2,sector %in% c("S14_S15","S11","S12"),na_item == "B9", direct == "PAID")
S<-aggregate(S$value, by=list(Category= S$unit, S$direct, S$na_item,S$geo.time,S$time), FUN=sum)
S$Group.5 <-  as.Date(S$Group.5, format("%Y"))
S_pc <- S
S_pc$x<-(S$x/gdp$value)*100
#government Balance
GDEF<-subset(gen_gov_balance, select = c("unit", "geo.time","time", "value"))
GDEF$value <- GDEF$value*-1
GDEF_pc <- GDEF
GDEF_pc$value<-(GDEF$value/gdp$value)*100
#Current Account
CA<-filter(tmp2,na_item=="B9",direct=="PAID",sector=="S2")
CA_pc <- subset(CA, select = c("unit", "geo.time","time", "value"))
CA_pc$value<-(CA$value/gdp$value)*100
S
runApp('Desktop/R/Scripts/7Processes/Godley7Shiny.R')
runApp('Downloads/shiny dashboard apps/sevenprocesseseu')
runApp('Downloads/shiny dashboard apps/sevenprocesseseu')
runApp('Downloads/shiny dashboard apps/sevenprocesseseu')
runApp('Desktop/R/Scripts/7Processes/Godley7Shiny.R')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
library(shiny); runApp('Desktop/Appseqwr124.R')
runApp('Desktop/Appseqwr124.R')
shiny::runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
source(url("https://www.dropbox.com/s/qegbksmllwfpyc3/GovDebt.RData?dl=0"))
source(url("https://www.dropbox.com/s/qegbksmllwfpyc3/GovDebt.RData?dl=0"))
load(url("https://www.dropbox.com/s/qegbksmllwfpyc3/GovDebt.RData?dl=0"))
load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/GovDebt.RData"))
source(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/GovDebt.RData"))
load(url("https://www.dropbox.com/s/nwtmdd3c7wt4b5t/BankingData.RData?dl=1")
)
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
Def2 <- filter(DefData, Type != "Total")
Def2
runApp('Desktop/R/IrishCrisis')
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/Tax.RData"))
load(url("https://www.dropbox.com/s/7j0zhanld5icreo/Tax.RData?dl=1"))
#TaxData <- read.xls("Tax.xls", sheet = "Sheet",check.names = FALSE)
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/SpenData.RData"))
load(url("https://www.dropbox.com/s/op27e28f4d1isl9/SpenData.RData?dl=1"))
#SpenData <- read.xls("BudgetStatistics2016.xls", sheet = "Spending")
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/DefData.RData"))
load(url("https://www.dropbox.com/s/b7xwd8wuldofn9z/DefData.RData?dl=1"))
#DefData <- read.xls("BudgetStatistics2016.xls", sheet = "Deficit")
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/GovDebt.RData"))
load(url("https://www.dropbox.com/s/qegbksmllwfpyc3/GovDebt.RData?dl=1"))
#GovDebt <- read.xls("EuroStatDebt.xls")
DefData
GovDebt <- melt(GovDebt, id.vars="Time", value.name = "value", variable.name = "Country")
TaxData <- melt(TaxData,  id.vars = "Type",
variable.name = "Year",
value.name = "value")
DefData <- melt(DefData,  id.vars = "Year",
variable.name = "Type",
value.name = "value")
TaxData$Year <-  as.Date(TaxData$Year, format("%Y-%m-%d"))
SpenData$Year <-  as.Date(SpenData$Year, format("%Y-%m-%d"))
DefData$Year <-  as.Date(DefData$Year, format("%Y-%m-%d"))
GovDebt$Time <-  as.Date(GovDebt$Time, format("%Y-%m-%d"))
DefData
DaTax <- filter(TaxData, Type != "Total")
Def2 <- filter(DefData, Type != "Total")
Def3 <- filter(DefData, Type == "Total")
y <- list(
title = "€ in 000s")
y2 <- list(
title = "€ in Ms")
y3 <- list(
title = "As a % of GDP")
colours = (col=viridis(10))
colours2 = c("blue","lightskyblue")
colours3 = (col=plasma(10))
colours4 = (col=magma(10))
Taxplot <- plot_ly(DaTax, x = ~Year, y = ~value) %>%
add_bars(color = DaTax$Type, colors = colours) %>%
add_lines(x = ~SpenData$Year, y = SpenData$value, name = "Total Government Expenditure", line = list(color = "dodgerblue")) %>%
layout(title = "Government Spending and Tax Revenue", barmode = "stack", yaxis = y, shapes = list(
list(type = "rect",
fillcolor = "grey", line = list(color = "grey"), opacity = 0.3,
x0 = "2008-01-01 ", x1 = "2010-01-01", xref = "x",
y0 = 0, y1 = 76000000, yref = "y")))
Taxplot
Debtplot <- plot_ly(GovDebt, x = ~Time, y = ~value)%>%
add_lines(color = ~Country, colors = c("grey80",'grey60', 'green3', "grey30"))%>%
layout(title = "Debt to GDP Ratio", yaxis = y3, shapes = list(
list(type = "rect",
fillcolor = "grey", line = list(color = "grey"), opacity = 0.3,
x0 = "2008-01-01 ", x1 = "2010-01-01", xref = "x",
y0 = 0, y1 = 120, yref = "y")))
Debtplot
Defplot <- plot_ly(Def2, x = ~Year, y = ~value) %>%
add_bars(color = Def2$Type ,colors = "Set1")%>%
add_lines(x = Def3$Year, y = Def3$value, name = "Total", colors = "blue")%>%
layout(title = "Exchequer Balance", yaxis = y2, shapes = list(
list(type = "rect",
fillcolor = "grey", line = list(color = "grey"), opacity = 0.3,
x0 = "2008", x1 = "2010", xref = "x",
y0 = -25000, y1 = 10000, yref = "y")))
Defplot
shiny::runApp('Desktop/R/IrishCrisis')
DefData
Def2
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/Tax.RData"))
load(url("https://www.dropbox.com/s/7j0zhanld5icreo/Tax.RData?dl=1"))
#TaxData <- read.xls("Tax.xls", sheet = "Sheet",check.names = FALSE)
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/SpenData.RData"))
load(url("https://www.dropbox.com/s/op27e28f4d1isl9/SpenData.RData?dl=1"))
#SpenData <- read.xls("BudgetStatistics2016.xls", sheet = "Spending")
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/DefData.RData"))
load(url("https://www.dropbox.com/s/b7xwd8wuldofn9z/DefData.RData?dl=1"))
#DefData <- read.xls("BudgetStatistics2016.xls", sheet = "Deficit")
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/GovDebt.RData"))
load(url("https://www.dropbox.com/s/qegbksmllwfpyc3/GovDebt.RData?dl=1"))
#GovDebt <- read.xls("EuroStatDebt.xls")
GovDebt <- melt(GovDebt, id.vars="Time", value.name = "value", variable.name = "Country")
TaxData <- melt(TaxData,  id.vars = "Type",
variable.name = "Year",
value.name = "value")
DefData <- melt(DefData,  id.vars = "Year",
variable.name = "Type",
value.name = "value")
TaxData$Year <-  as.Date(TaxData$Year, format("%Y-%m-%d"))
SpenData$Year <-  as.Date(SpenData$Year, format("%Y-%m-%d"))
DefData$Year <-  as.Date(DefData$Year, format("%Y-%m-%d"))
GovDebt$Time <-  as.Date(GovDebt$Time, format("%Y-%m-%d"))
DaTax <- filter(TaxData, Type != "Total")
Def2 <- filter(DefData, Type != "Total")
Def3 <- filter(DefData, Type == "Total")
library(shinydashboard)
library(ggplot2)
#library(httr)
library(rsconnect)
library(shiny)
library(plotly)
library(reshape2)
library(SmarterPoland)
library(dplyr)
library(zoo)
library(viridis)
library(lubridate)
library(streamgraph)
#library(htmlwidgets)
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/Tax.RData"))
load(url("https://www.dropbox.com/s/7j0zhanld5icreo/Tax.RData?dl=1"))
#TaxData <- read.xls("Tax.xls", sheet = "Sheet",check.names = FALSE)
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/SpenData.RData"))
load(url("https://www.dropbox.com/s/op27e28f4d1isl9/SpenData.RData?dl=1"))
#SpenData <- read.xls("BudgetStatistics2016.xls", sheet = "Spending")
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/DefData.RData"))
load(url("https://www.dropbox.com/s/b7xwd8wuldofn9z/DefData.RData?dl=1"))
#DefData <- read.xls("BudgetStatistics2016.xls", sheet = "Deficit")
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/GovDebt.RData"))
load(url("https://www.dropbox.com/s/qegbksmllwfpyc3/GovDebt.RData?dl=1"))
#GovDebt <- read.xls("EuroStatDebt.xls")
GovDebt <- melt(GovDebt, id.vars="Time", value.name = "value", variable.name = "Country")
TaxData <- melt(TaxData,  id.vars = "Type",
variable.name = "Year",
value.name = "value")
DefData <- melt(DefData,  id.vars = "Year",
variable.name = "Type",
value.name = "value")
TaxData$Year <-  as.Date(TaxData$Year, format("%Y-%m-%d"))
SpenData$Year <-  as.Date(SpenData$Year, format("%Y-%m-%d"))
DefData$Year <-  as.Date(DefData$Year, format("%Y-%m-%d"))
GovDebt$Time <-  as.Date(GovDebt$Time, format("%Y-%m-%d"))
DaTax <- filter(TaxData, Type != "Total")
Def2 <- filter(DefData, Type != "Total")
Def3 <- filter(DefData, Type == "Total")
Def2
runApp('Desktop/R/IrishCrisis')
y2 <- list(
title = "€ in Ms", range = c("1995-01-01","2015-01-01"))
Defplot <- plot_ly(Def2, x = ~Year, y = ~value) %>%
add_bars(color = Def2$Type ,colors = "Set1")%>%
add_lines(x = Def3$Year, y = Def3$value, name = "Total", colors = "blue")%>%
layout(title = "Exchequer Balance", yaxis = y2, shapes = list(
list(type = "rect",
fillcolor = "grey", line = list(color = "grey"), opacity = 0.3,
x0 = "2008", x1 = "2010", xref = "x",
y0 = -25000, y1 = 10000, yref = "y")))
Defplot
y2 <- list(
title = "€ in Ms", range = c("1996-01-01","2015-01-01"))
Defplot <- plot_ly(Def2, x = ~Year, y = ~value) %>%
add_bars(color = Def2$Type ,colors = "Set1")%>%
add_lines(x = Def3$Year, y = Def3$value, name = "Total", colors = "blue")%>%
layout(title = "Exchequer Balance", yaxis = y2, shapes = list(
list(type = "rect",
fillcolor = "grey", line = list(color = "grey"), opacity = 0.3,
x0 = "2008", x1 = "2010", xref = "x",
y0 = -25000, y1 = 10000, yref = "y")))
Defplot
shiny::runApp('Desktop/R/IrishCrisis')
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/Tax.RData"))
load(url("https://www.dropbox.com/s/7j0zhanld5icreo/Tax.RData?dl=1"))
#TaxData <- read.xls("Tax.xls", sheet = "Sheet",check.names = FALSE)
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/SpenData.RData"))
load(url("https://www.dropbox.com/s/op27e28f4d1isl9/SpenData.RData?dl=1"))
#SpenData <- read.xls("BudgetStatistics2016.xls", sheet = "Spending")
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/DefData.RData"))
load(url("https://www.dropbox.com/s/b7xwd8wuldofn9z/DefData.RData?dl=1"))
#DefData <- read.xls("BudgetStatistics2016.xls", sheet = "Deficit")
#load(url("https://dl.dropboxusercontent.com/u/78100269/Irish%20Crisis/GovDebt.RData"))
load(url("https://www.dropbox.com/s/qegbksmllwfpyc3/GovDebt.RData?dl=1"))
#GovDebt <- read.xls("EuroStatDebt.xls")
GovDebt <- melt(GovDebt, id.vars="Time", value.name = "value", variable.name = "Country")
TaxData <- melt(TaxData,  id.vars = "Type",
variable.name = "Year",
value.name = "value")
DefData <- melt(DefData,  id.vars = "Year",
variable.name = "Type",
value.name = "value")
DefData
TaxData$Year <-  as.Date(TaxData$Year, format("%Y-%m-%d"))
SpenData$Year <-  as.Date(SpenData$Year, format("%Y-%m-%d"))
DefData$Year <-  as.Date(DefData$Year, format("%Y-%m-%d"))
GovDebt$Time <-  as.Date(GovDebt$Time, format("%Y-%m-%d"))
TaxData$Year <- year(TaxData$Year)
SpenData$Year <- year(SpenData$Year)
DefData$Year <- year(DefData$Year)
GovDebt$Time <- year(GovDebt$Time)
DefData
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
load(url("https://dl.dropboxusercontent.com/u/78100269/nasa_10_f_tr.RData"))
#load("/Users/tomokeeffe/data-eurostat/long/nasa_10_nf_tr.RData")
load(url("https://dl.dropboxusercontent.com/u/78100269/nasa_10_nf_tr.RData"))
#load("/Users/tomokeeffe/data-eurostat/long/prc_hicp_aind.RData")
load(url("https://dl.dropboxusercontent.com/u/78100269/prc_hicp_aind.RData"))
library(shiny); runApp('Desktop/R/Scripts/7Processes/Godley7Shiny.R')
https://www.dropbox.com/s/23bf2u4z742ycue/prc_hicp_aind.RData?dl=0
load(url("https://www.dropbox.com/s/3wkenftdia5o003/nasa_10_f_tr.RData?dl=1"))
#load("/Users/tomokeeffe/data-eurostat/long/nasa_10_nf_tr.RData")
load(url("https://www.dropbox.com/s/0mwmnblqwtsyevg/nasa_10_nf_tr.RData?dl=1"))
#load("/Users/tomokeeffe/data-eurostat/long/prc_hicp_aind.RData")
load(url("https://www.dropbox.com/s/23bf2u4z742ycue/prc_hicp_aind.RData?dl=1"))
nasa_10_f_tr$time <-  as.Date(nasa_10_f_tr$time, format("%Y"))
nasa_10_f_tr$time <- year(nasa_10_f_tr$time)
nasa_10_nf_tr$time <-  as.Date(nasa_10_nf_tr$time, format("%Y"))
nasa_10_nf_tr$time <- year(nasa_10_nf_tr$time)
prc_hicp_aind$time <-  as.Date(prc_hicp_aind$time, format("%Y"))
prc_hicp_aind$time <- year(prc_hicp_aind$time)
nasa_10_f_tr <- nasa_10_f_tr[order(as.Date(nasa_10_f_tr$time, format="%Y")),]
nasa_10_nf_tr <- nasa_10_nf_tr[order(as.Date(nasa_10_nf_tr$time, format="%Y")),]
prc_hicp_aind <- prc_hicp_aind[order(as.Date(prc_hicp_aind$time, format="%Y")),]
tmp2<-filter(nasa_10_nf_tr, unit=="CP_MEUR")
gdp<-filter(tmp2,na_item=="B1GQ", direct=="PAID")
gdp_d <- subset(gdp, select = c("unit", "geo.time","time", "value"))
gdp_d$value <- (gdp$value/lag(gdp$value,1) -1)*100
gov_exp<-filter(tmp2,na_item=="OTE", direct=="PAID", sector=="S13")
#government tax revenue
gov_trev <- filter(tmp2,na_item == "OTR",sector == "S13", direct == "RECV")
#theta - tax share
theta <- subset(gov_trev, select = c("unit", "geo.time","time", "value"))
theta$value<-as.numeric(as.character(gov_trev$value))/as.numeric(as.character(gdp$value))
#Adjusted fiscal ratio
AFR <- theta
AFR$value<-as.numeric(as.character(gov_exp$value))/as.numeric(as.character(theta$value))
AFR_d <- subset(AFR, select = c("unit", "geo.time","time", "value"))
AFR_d$value <- (AFR$value/lag(AFR$value,1) -1)*100
unique(gov_trev$geo.time)
unique(gdp$geo.time)
filter(gdp, geo.time != "HR")
theta$value<-as.numeric(as.character(gov_trev$value))/as.numeric(as.character(gdp$value))
gdp <- filter(gdp, geo.time != "HR")
theta$value<-as.numeric(as.character(gov_trev$value))/as.numeric(as.character(gdp$value))
gdp <- filter(gdp, geo.time != c("HR","RS"))
gdp <- filter(gdp, geo.time != "HR")
gdp <- filter(gdp, geo.time != "RS")
theta$value<-as.numeric(as.character(gov_trev$value))/as.numeric(as.character(gdp$value))
AFR <- theta
AFR$value<-as.numeric(as.character(gov_exp$value))/as.numeric(as.character(theta$value))
AFR_d <- subset(AFR, select = c("unit", "geo.time","time", "value"))
AFR_d$value <- (AFR$value/lag(AFR$value,1) -1)*100
head(AFR)
AFR$geo.time == "IE"
data <- airquality[,1:4]
data=melt(cor(data, use="p"))
data
qplot(x=AFR$geo.time, y=AFR$geo.time, fill=AFR$value, geom="tile") )
qplot(x=AFR$geo.time, y=AFR$geo.time, fill=AFR$value, geom="tile")
qplot(data = cor(AFR), x=AFR$geo.time, y=AFR$geo.time, fill=AFR$value, geom="tile")
qplot(data = cor(AFR$value), x=AFR$geo.time, y=AFR$geo.time, fill=AFR$value, geom="tile")
qplot(x=geo.time, y=geo.time, data=melt(cor(AFR, use="value")), fill=value, geom="tile")
> data <- airquality[,1:4]
data
data <- airquality[,1:4]
data
qplot(x=geo.time, y=geo.time, data=melt(cor(AFR, use=" complete.obs ")), fill=value, geom="tile")
qplot(x=geo.time, y=geo.time, data=melt(cor(AFR, use="complete.obs")), fill=value, geom="tile")
data21 <- melt(cor(AFR, use="complete.obs"))
data21 <- melt(cor(AFR$value, use="complete.obs"))
data21 <- cor(AFR$value, use="complete.obs")
library(tidyr)
data_wide <- spread(AFR, geo.time, value = )
data_wide <- spread(AFR, geo.time, value)
head(data_wide)
data_wide <- spread(AFR, geo.time, time)
head(data_wide)
res <- cor(data_wide)
res <- cor(as.matrix(data_wide))
data_wide <- subset(data_wide, select != "unit")
data_wide <- subset(data_wide, select = -("unit") )
data_wide <- subset(data_wide, select = -("unit"))
data_wide <- subset(data_wide, select = -c("unit"))
data_wide <- subset(data_wide, select = -c(unit))
head(data_wide)
res <- cor(data_wide)
head(res)
data=melt(cor(data_wide, use="p"))
head(data)
qplot(x=Var1, y=Var1,  fill=value, geom="tile")
qplot(x=data$Var1, y=data$Var1,  fill=data$value, geom="tile")
data_wide <- spread(AFR, geo.time, time)
data_wide <- spread(AFR, geo.time, value = )
data_wide <- spread(AFR, geo.time, value)
data_wide <- spread(AFR, geo.time, value)
head(data_wide)
res <- cor(data_wide)
data_wide <- spread(AFR, geo.time, value)
data_wide <- subset(data_wide, select = -c(unit))
res <- cor(data_wide)
tail(res)
runApp('Desktop/R/Scripts/7Processes/Godley7Shiny.R')
shiny::runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/IrishCrisis')
runApp('Desktop/R/Scripts/7Processes/Godley7Shiny.R')
library(shiny); runApp('Desktop/R/Scripts/7Processes/Godley7Shiny.R')
runApp('Desktop/R/Scripts/7Processes/Godley7Shiny.R')
runApp('Desktop/R/IrishCrisis')
library(shiny); runApp('Desktop/R/Scripts/7Processes/Godley7Shiny.R')
runApp('Desktop/R/IrishCrisis')
shiny::runApp('Desktop/R/IrishCrisis')
